-- This file is automatically generated. You should know what you did if you want to edit this
-- !filter_project_alias --
PhysicalResultSink
--PhysicalDistribute
----PhysicalProject
------filter((t1.id = 1))
--------PhysicalOlapScan[t1]

-- !filter_project_constant --
PhysicalResultSink
--PhysicalEmptyRelation

-- !filter_project_arithmetic --
PhysicalResultSink
--PhysicalDistribute
----PhysicalProject
------filter((cast(id as BIGINT) = 1))
--------PhysicalOlapScan[t1]

-- !filter_order_by --
PhysicalResultSink
--PhysicalDistribute
----PhysicalProject
------filter((t.id = 1))
--------PhysicalOlapScan[t1]

-- !filter_order_by_limit --
PhysicalResultSink
--filter((t.id = 1))
----PhysicalTopN[MERGE_SORT]
------PhysicalDistribute
--------PhysicalTopN[LOCAL_SORT]
----------PhysicalProject
------------PhysicalOlapScan[t1]

-- !filter_order_by_constant --
PhysicalResultSink
--PhysicalDistribute
----PhysicalProject
------filter((t.id = 1))
--------PhysicalOlapScan[t1]

-- !filter_join_inner --
PhysicalResultSink
--PhysicalDistribute
----PhysicalProject
------hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id))otherCondition=()
--------filter((t1.id = 1))
----------PhysicalOlapScan[t1]
--------PhysicalDistribute
----------filter((t2.id = 1))
------------PhysicalOlapScan[t2]

-- !filter_join_inner --
PhysicalResultSink
--PhysicalDistribute
----PhysicalProject
------hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id))otherCondition=()
--------filter((t1.id = 1))
----------PhysicalOlapScan[t1]
--------PhysicalDistribute
----------filter((t2.id = 1))
------------PhysicalOlapScan[t2]

-- !filter_join_inner --
PhysicalResultSink
--PhysicalDistribute
----PhysicalProject
------hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id))otherCondition=()
--------PhysicalOlapScan[t2]
--------PhysicalDistribute
----------filter((t1.msg = ''))
------------PhysicalOlapScan[t1]

-- !filter_join_left --
PhysicalResultSink
--PhysicalDistribute
----PhysicalProject
------hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.id = t2.id))otherCondition=()
--------filter((t1.id = 1))
----------PhysicalOlapScan[t1]
--------PhysicalDistribute
----------filter((t2.id = 1))
------------PhysicalOlapScan[t2]

-- !filter_join_right --
PhysicalResultSink
--PhysicalDistribute
----PhysicalProject
------hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id))otherCondition=()
--------filter((t1.id = 1))
----------PhysicalOlapScan[t1]
--------PhysicalDistribute
----------filter((t2.id = 1))
------------PhysicalOlapScan[t2]

-- !filter_join_full --
PhysicalResultSink
--PhysicalDistribute
----PhysicalProject
------hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.id = t2.id))otherCondition=()
--------filter((t1.id = 1))
----------PhysicalOlapScan[t1]
--------PhysicalDistribute
----------filter((t2.id = 1))
------------PhysicalOlapScan[t2]

-- !filter_join_cross --
PhysicalResultSink
--PhysicalDistribute
----PhysicalProject
------NestedLoopJoin[CROSS_JOIN]
--------PhysicalOlapScan[t2]
--------PhysicalDistribute
----------filter((t1.id = 1))
------------PhysicalOlapScan[t1]

-- !filter_join_left_anti --
PhysicalResultSink
--PhysicalDistribute
----PhysicalProject
------hashJoin[LEFT_ANTI_JOIN] hashCondition=((t1.id = t2.id))otherCondition=()
--------filter((t1.id = 1))
----------PhysicalOlapScan[t1]
--------PhysicalDistribute
----------PhysicalProject
------------filter((t2.id = 1))
--------------PhysicalOlapScan[t2]

-- !filter_join_left_semi --
PhysicalResultSink
--PhysicalDistribute
----PhysicalProject
------hashJoin[LEFT_SEMI_JOIN] hashCondition=((t1.id = t2.id))otherCondition=()
--------filter((t1.id = 1))
----------PhysicalOlapScan[t1]
--------PhysicalDistribute
----------PhysicalProject
------------filter((t2.id = 1))
--------------PhysicalOlapScan[t2]

-- !filter_join_right_anti --
PhysicalResultSink
--PhysicalDistribute
----PhysicalProject
------hashJoin[LEFT_ANTI_JOIN] hashCondition=((t1.id = t2.id))otherCondition=()
--------filter((t2.id = 1))
----------PhysicalOlapScan[t2]
--------PhysicalDistribute
----------PhysicalProject
------------filter((t1.id = 1))
--------------PhysicalOlapScan[t1]

-- !filter_join_right_semi --
PhysicalResultSink
--PhysicalDistribute
----PhysicalProject
------hashJoin[LEFT_SEMI_JOIN] hashCondition=((t1.id = t2.id))otherCondition=()
--------filter((t2.id = 1))
----------PhysicalOlapScan[t2]
--------PhysicalDistribute
----------PhysicalProject
------------filter((t1.id = 1))
--------------PhysicalOlapScan[t1]

-- !filter_join_right_semi --
PhysicalResultSink
--PhysicalDistribute
----PhysicalProject
------hashJoin[LEFT_SEMI_JOIN] hashCondition=((t1.id = t2.id))otherCondition=()
--------filter((t2.id = 1))
----------PhysicalOlapScan[t2]
--------PhysicalDistribute
----------PhysicalProject
------------filter((t1.id = 1))
--------------PhysicalOlapScan[t1]

-- !filter_multi_inner --
PhysicalResultSink
--PhysicalDistribute
----PhysicalProject
------hashJoin[INNER_JOIN] hashCondition=((t1.id = t3.id))otherCondition=()
--------filter((t3.id = 1))
----------PhysicalOlapScan[t3]
--------PhysicalDistribute
----------hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id))otherCondition=()
------------filter((t1.id = 1))
--------------PhysicalOlapScan[t1]
------------PhysicalDistribute
--------------filter((t2.id = 1))
----------------PhysicalOlapScan[t2]

-- !filter_mixed_inner_left --
PhysicalResultSink
--PhysicalDistribute
----PhysicalProject
------hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id))otherCondition=()
--------hashJoin[RIGHT_OUTER_JOIN] hashCondition=((t1.id = t3.id))otherCondition=()
----------PhysicalDistribute
------------filter((t3.id = 1))
--------------PhysicalOlapScan[t3]
----------PhysicalDistribute
------------filter((t1.id = 1))
--------------PhysicalOlapScan[t1]
--------PhysicalDistribute
----------filter((t2.id = 1))
------------PhysicalOlapScan[t2]

-- !filter_multi_left --
PhysicalResultSink
--PhysicalDistribute
----PhysicalProject
------hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.id = t2.id))otherCondition=()
--------hashJoin[RIGHT_OUTER_JOIN] hashCondition=((t1.id = t3.id))otherCondition=()
----------PhysicalDistribute
------------filter((t3.id = 1))
--------------PhysicalOlapScan[t3]
----------PhysicalDistribute
------------filter((t1.id = 1))
--------------PhysicalOlapScan[t1]
--------PhysicalDistribute
----------filter((t2.id = 1))
------------PhysicalOlapScan[t2]

-- !filter_multi_outer --
PhysicalResultSink
--PhysicalDistribute
----PhysicalProject
------hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.id = t2.id))otherCondition=()
--------hashJoin[RIGHT_OUTER_JOIN] hashCondition=((t1.id = t3.id))otherCondition=()
----------PhysicalDistribute
------------filter((t3.id = 1))
--------------PhysicalOlapScan[t3]
----------PhysicalDistribute
------------filter((t1.id = 1))
--------------PhysicalOlapScan[t1]
--------PhysicalDistribute
----------filter((t2.id = 1))
------------PhysicalOlapScan[t2]

-- !filter_multi_cross --
PhysicalResultSink
--PhysicalDistribute
----PhysicalProject
------NestedLoopJoin[CROSS_JOIN]
--------PhysicalOlapScan[t3]
--------PhysicalDistribute
----------NestedLoopJoin[CROSS_JOIN]
------------PhysicalOlapScan[t2]
------------PhysicalDistribute
--------------filter((t1.id = 1))
----------------PhysicalOlapScan[t1]

-- !filter_multi_mixed --
PhysicalResultSink
--PhysicalDistribute
----PhysicalProject
------hashJoin[INNER_JOIN] hashCondition=((t1.id = t2.id))otherCondition=()
--------hashJoin[LEFT_OUTER_JOIN] hashCondition=((t1.id = t3.id))otherCondition=()
----------hashJoin[INNER_JOIN] hashCondition=((t1.id = t4.id))otherCondition=()
------------filter((t4.id = 1))
--------------PhysicalOlapScan[t4]
------------PhysicalDistribute
--------------filter((t1.id = 1))
----------------PhysicalOlapScan[t1]
----------PhysicalDistribute
------------filter((t3.id = 1))
--------------PhysicalOlapScan[t3]
--------PhysicalDistribute
----------filter((t2.id = 1))
------------PhysicalOlapScan[t2]

-- !filter_aggregation_filtered_agg_func --
PhysicalResultSink
--PhysicalDistribute
----PhysicalProject
------filter((count(*) > 10))
--------hashAgg[GLOBAL]
----------PhysicalDistribute
------------hashAgg[LOCAL]
--------------PhysicalProject
----------------PhysicalOlapScan[t1]

-- !filter_aggregation_group_set --
PhysicalResultSink
--PhysicalDistribute
----PhysicalProject
------filter((cast(msg as DOUBLE) = 1))
--------hashAgg[GLOBAL]
----------PhysicalDistribute
------------hashAgg[LOCAL]
--------------PhysicalRepeat
----------------filter((t1.id > 10))
------------------PhysicalOlapScan[t1]

-- !filter_aggregation_group_set --
PhysicalResultSink
--PhysicalDistribute
----PhysicalProject
------filter(((t1.id > 10) OR (cast(msg as DOUBLE) = 1)))
--------hashAgg[GLOBAL]
----------PhysicalDistribute
------------hashAgg[LOCAL]
--------------PhysicalRepeat
----------------PhysicalOlapScan[t1]

-- !filter_aggregation_filtered_key --
PhysicalResultSink
--PhysicalDistribute
----PhysicalProject
------hashAgg[LOCAL]
--------PhysicalProject
----------filter((t1.id > 10))
------------PhysicalOlapScan[t1]

-- !filter_aggregation_filtered_part_key --
PhysicalResultSink
--PhysicalDistribute
----PhysicalProject
------hashAgg[LOCAL]
--------filter((t1.id > 10))
----------PhysicalOlapScan[t1]

-- !filter_aggregation_filtered_part_key --

-- !filter_aggregation_filtered_part_key --
PhysicalResultSink
--PhysicalDistribute
----PhysicalProject
------filter((t.c > 10))
--------hashAgg[LOCAL]
----------PhysicalProject
------------PhysicalOlapScan[t1]

-- !push_filter_union --
PhysicalResultSink
--PhysicalDistribute
----hashAgg[GLOBAL]
------PhysicalDistribute
--------hashAgg[LOCAL]
----------PhysicalUnion
------------PhysicalDistribute
--------------filter((t1.id = 2))
----------------PhysicalOlapScan[t1]
------------PhysicalDistribute
--------------filter((t2.id = 2))
----------------PhysicalOlapScan[t2]

-- !push_filter_union_all --
PhysicalResultSink
--PhysicalDistribute
----PhysicalUnion
------PhysicalDistribute
--------filter((t1.id = 2))
----------PhysicalOlapScan[t1]
------PhysicalDistribute
--------filter((t2.id = 2))
----------PhysicalOlapScan[t2]

-- !push_filter_intersect --
PhysicalResultSink
--PhysicalDistribute
----PhysicalIntersect
------PhysicalDistribute
--------filter((t1.id = 2))
----------PhysicalOlapScan[t1]
------PhysicalDistribute
--------filter((t2.id = 2))
----------PhysicalOlapScan[t2]

-- !push_filter_except --
PhysicalResultSink
--PhysicalDistribute
----PhysicalExcept
------PhysicalDistribute
--------filter((t1.id = 2))
----------PhysicalOlapScan[t1]
------PhysicalDistribute
--------filter((t2.id = 2))
----------PhysicalOlapScan[t2]

